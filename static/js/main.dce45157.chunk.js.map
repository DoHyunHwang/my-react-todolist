{"version":3,"sources":["components/TodoContext.js","components/TodoCreate.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["initialTodos","id","text","done","TodoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextContext","TodoProvider","children","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","CircleButton","styled","div","props","open","css","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","placeholder","autoFocus","onChange","target","onClick","React","memo","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","CheckCircle","Text","Remove","TodoItemBlock","TodoItem","TodoListBlock","TodoList","todos","TodoTemplateBlock","TodoTemplate","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dce45157.chunk.js","sourcesContent":["import React, { useReducer, createContext, useContext, useRef } from 'react';\n\nconst initialTodos = [\n  {\n    id: 1,\n    text: '프로젝트 생성하기',\n    done: true,\n  },\n  {\n    id: 2,\n    text: '컴포넌트 스타일링 하기',\n    done: true,\n  },\n  {\n    id: 3,\n    text: 'Context 만들기',\n    done: false,\n  },\n  {\n    id: 4,\n    text: '기능 구현하기',\n    done: false,\n  },\n];\n\nfunction TodoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return state.concat(action.todo);\n    case 'TOGGLE':\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\n      );\n    case 'REMOVE':\n      return state.filter((todo) => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandled action type ${action.type}`);\n  }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextContext = createContext();\n\nexport function TodoProvider({ children }) {\n  const [state, dispatch] = useReducer(TodoReducer, initialTodos);\n  const nextId = useRef(5);\n\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextContext.Provider value={nextId}>\n          {children}\n        </TodoNextContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n}\n\nexport function useTodoState() {\n  const context = useContext(TodoStateContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n\n  return context;\n}\n\nexport function useTodoDispatch() {\n  const context = useContext(TodoDispatchContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return context;\n}\n\nexport function useTodoNextId() {\n  const context = useContext(TodoNextContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return context;\n}\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdAdd } from \"react-icons/md\";\nimport { useTodoDispatch, useTodoNextId } from \"./TodoContext\";\n\nconst CircleButton = styled.div`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n\n  font-size: 60px;\n  color: white;\n  border-radius: 40px;\n\n  border: none;\n  outline: none;\n\n  transition: 0.125s all ease-in;\n  ${(props) =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding: 32px;\n  padding-bottom: 72px;\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n  const onChange = (e) => setValue(e.target.value);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"CREATE\",\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false,\n      },\n    });\n    setValue(\"\");\n    setOpen(false);\n    nextId.current += 1;\n  };\n\n  return (\n    <>\n      {open && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={onSubmit}>\n            <Input\n              placeholder=\"할 일을 입력 후 Enter를 누르세요.\"\n              autoFocus\n              onChange={onChange}\n              value={value}\n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n}\n\nexport default React.memo(TodoCreate);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from './TodoContext';\n\nconst TodoHeadBlock = styled.div`\n  padding: 48px 32px 24px;\n  border-bottom: 1px silid #e9ecef;\n\n  h1 {\n    margin: 0;\n    font-size: 36px;\n    color: #343a40;\n  }\n\n  .day {\n    margin-top: 4px;\n    color: #868e96;\n    font-size: 21px;\n  }\n  .tasks-left {\n    color: #20c997;\n    font-size: 18px;\n    margin-top: 40px;\n    font-weight: bold;\n  }\n`;\n\nfunction TodoHead() {\n  const todos = useTodoState();\n  const undoneTasks = todos.filter((todo) => !todo.done);\n\n  const today = new Date();\n  const dateString = today.toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n\n  const dayName = today.toLocaleDateString('ko-KR', {\n    weekday: 'long',\n  });\n\n  return (\n    <TodoHeadBlock>\n      <h1>{dateString}</h1>\n      <div className=\"day\">{dayName}</div>\n      <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\n    </TodoHeadBlock>\n  );\n}\n\nexport default TodoHead;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdDone, MdDelete } from 'react-icons/md';\nimport { useTodoDispatch } from './TodoContext';\n\nconst CheckCircle = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 16px;\n  border: 1px solid #ced4da;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  ${(props) =>\n    props.done &&\n    css`\n      border: 1px solid #38d9a9;\n      color: #38d9a9;\n    `}\n`;\n\nconst Text = styled.div`\n  flex: 1;\n  font-size: 21px;\n  color: #495057;\n  ${(props) =>\n    props.done &&\n    css`\n      color: #ced4da;\n    `}\n`;\n\nconst Remove = styled.div`\n  opacity: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #dee2e6;\n  font-size: 24px;\n  cursor: pointer;\n  &:hover {\n    color: #ff6b6b;\n  }\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 0;\n  &:hover {\n    ${Remove} {\n      opacity: 1;\n    }\n  }\n`;\n\nfunction TodoItem({ id, done, text }) {\n  const dispatch = useTodoDispatch();\n  const onToggle = () =>\n    dispatch({\n      type: 'TOGGLE',\n      id,\n    });\n  const onRemove = () =>\n    dispatch({\n      type: 'REMOVE',\n      id,\n    });\n\n  return (\n    <TodoItemBlock>\n      <CheckCircle done={done} onClick={onToggle}>\n        {done && <MdDone />}\n      </CheckCircle>\n      <Text done={done}>{text}</Text>\n      <Remove onClick={onRemove}>\n        <MdDelete />\n      </Remove>\n    </TodoItemBlock>\n  );\n}\n\nexport default React.memo(TodoItem);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from './TodoContext';\nimport TodoItem from './TodoItem';\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  padding: 20px 32px;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\n\nfunction TodoList() {\n  const todos = useTodoState();\n\n  return (\n    <TodoListBlock>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          id={todo.id}\n          text={todo.text}\n          done={todo.done}\n        />\n      ))}\n      {/* <TodoItem text={\"프로젝트 생성하기\"} done={true} />\n      <TodoItem text={\"컴포넌트 스타일링 하기\"} done={true} />\n      <TodoItem text={\"Context 만들기\"} done={false} />\n      <TodoItem text={\"기능 구현하기\"} done={false} /> */}\n    </TodoListBlock>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TodoTemplateBlock = styled.div`\n  width: 512px;\n  height: 768px;\n\n  position: relative;\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.04);\n\n  margin: 0 auto;\n  margin-top: 96px;\n  margin-bottom: 32px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction TodoTemplate({ children }) {\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\n}\n\nexport default TodoTemplate;\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { TodoProvider } from './components/TodoContext';\nimport TodoCreate from './components/TodoCreate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\nexport default function App() {\n  return (\n    <TodoProvider>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}